{"version":3,"sources":["webpack:///./src/pages/page-2.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","a","createElement","title","to","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Header","siteTitle","menuLinks","react_default","style","background","marginBottom","Navbar","expand","Container","margin","maxWidth","padding","Toggle","aria-controls","gatsby_browser_entry","Brand","as","color","textDecoration","Collapse","id","Nav","className","map","link","key","Link","eventkey","Layout","children","_4196542385","Fragment","header","paddingTop","Date","getFullYear","href","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"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","file":"component---src-pages-page-2-js-0d8d8014912fb9e2cd39.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title=\"Page two\" />\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default SecondPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Container from 'react-bootstrap/Container'\n\nconst Header = ({ siteTitle, menuLinks }) => (\n  <header\n    style={{\n      background: `#669966`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n      <Navbar expand=\"lg\">\n      {/* <Container> */}\n\n        <Container\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0.5rem 0.5rem 0.5rem 0.5rem`,\n          }}\n        >      \n        \n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Link to=\"/\">\n            <Navbar.Brand as=\"span\">\n              <h1 style={{ margin: 0, color: `white`, textDecoration: `none`}}>\n              \n                {siteTitle}\n              \n              </h1>\n            </Navbar.Brand>\n          </Link>\n\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n                {menuLinks.map(link => (\n                  <Link to={link.link} key={link.name} > \n                    <Nav.Link as=\"span\" eventkey={link.name}  style={{ color: `white` }} >\n                      \n                        {link.name}\n                      \n                    </Nav.Link>\n                  </Link>\n                ))}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar> \n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          menuLinks{\n            name\n            link\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header menuLinks={data.site.siteMetadata.menuLinks} siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          <p>© {new Date().getFullYear()}, Code Park Houston</p>\n          <p>Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a></p>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}